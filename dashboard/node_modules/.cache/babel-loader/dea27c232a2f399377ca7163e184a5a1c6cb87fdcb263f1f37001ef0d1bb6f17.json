{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\OneDrive\\\\Desktop\\\\Data Visualization\\\\dashboard\\\\src\\\\Graphs\\\\Line.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Line = ({\n  serverData\n}) => {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    if (!Array.isArray(serverData)) {\n      return; // If serverData is not an array, exit the useEffect\n    }\n    let uniquePestle = [];\n    serverData.forEach(i => {\n      if (!uniquePestle.includes(i.pestle) && i.pestle !== \"\") {\n        uniquePestle.push(i.pestle);\n      }\n    });\n    const pestleCount = uniquePestle.map(item => ({\n      pestle: item,\n      count: serverData.filter(i => i.pestle === item).length\n    }));\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 50\n    };\n    const width = 500 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n    const svg = d3.select(ref.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n    const x = d3.scaleBand().domain(uniquePestle).range([0, width]).padding(0.1);\n    const y = d3.scaleLinear().domain([0, d3.max(pestleCount, d => d.count)]).nice().range([height, 0]);\n    const line = d3.line().x(d => x(d.pestle)).y(d => y(d.count)).curve(d3.curveMonotoneX);\n    svg.append('path').datum(pestleCount).attr('fill', 'none').attr('stroke', 'steelblue').attr('stroke-width', 1.5).attr('d', line);\n    svg.append('g').attr('class', 'x-axis').attr('transform', `translate(0,${height})`).call(d3.axisBottom(x));\n    svg.append('g').attr('class', 'y-axis').call(d3.axisLeft(y));\n  }, [serverData]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this);\n};\n_s(Line, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = Line;\nexport default Line;\nvar _c;\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","Line","serverData","_s","ref","Array","isArray","uniquePestle","forEach","i","includes","pestle","push","pestleCount","map","item","count","filter","length","margin","top","right","bottom","left","width","height","svg","select","current","attr","append","x","scaleBand","domain","range","padding","y","scaleLinear","max","d","nice","line","curve","curveMonotoneX","datum","call","axisBottom","axisLeft","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/visha/OneDrive/Desktop/Data Visualization/dashboard/src/Graphs/Line.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst Line = ({ serverData }) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!Array.isArray(serverData)) {\r\n            return; // If serverData is not an array, exit the useEffect\r\n        }\r\n    \r\n        let uniquePestle = [];\r\n        serverData.forEach((i) => {\r\n            if (!uniquePestle.includes(i.pestle) && i.pestle !== \"\") {\r\n                uniquePestle.push(i.pestle);\r\n            }\r\n        });\r\n    \r\n        const pestleCount = uniquePestle.map((item) => ({\r\n            pestle: item,\r\n            count: serverData.filter((i) => i.pestle === item).length,\r\n        }));\r\n    \r\n        const margin = { top: 20, right: 30, bottom: 40, left: 50 };\r\n        const width = 500 - margin.left - margin.right;\r\n        const height = 400 - margin.top - margin.bottom;\r\n    \r\n        const svg = d3.select(ref.current)\r\n            .attr('width', width + margin.left + margin.right)\r\n            .attr('height', height + margin.top + margin.bottom)\r\n            .append('g')\r\n            .attr('transform', `translate(${margin.left},${margin.top})`);\r\n    \r\n        const x = d3.scaleBand()\r\n            .domain(uniquePestle)\r\n            .range([0, width])\r\n            .padding(0.1);\r\n    \r\n        const y = d3.scaleLinear()\r\n            .domain([0, d3.max(pestleCount, d => d.count)])\r\n            .nice()\r\n            .range([height, 0]);\r\n    \r\n        const line = d3.line()\r\n            .x(d => x(d.pestle))\r\n            .y(d => y(d.count))\r\n            .curve(d3.curveMonotoneX);\r\n    \r\n        svg.append('path')\r\n            .datum(pestleCount)\r\n            .attr('fill', 'none')\r\n            .attr('stroke', 'steelblue')\r\n            .attr('stroke-width', 1.5)\r\n            .attr('d', line);\r\n    \r\n        svg.append('g')\r\n            .attr('class', 'x-axis')\r\n            .attr('transform', `translate(0,${height})`)\r\n            .call(d3.axisBottom(x));\r\n    \r\n        svg.append('g')\r\n            .attr('class', 'y-axis')\r\n            .call(d3.axisLeft(y));\r\n    }, [serverData]);\r\n    \r\n\r\n    return <svg ref={ref}></svg>;\r\n};\r\n\r\nexport default Line;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}