{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\OneDrive\\\\Desktop\\\\Data Visualization\\\\dashboard\\\\src\\\\Graphs\\\\Line.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Line = ({\n  serverData\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  console.log(serverData);\n  useEffect(() => {\n    // Check if serverData is an array\n    if (Array.isArray(serverData)) {\n      let uniquePestle = [];\n      serverData.forEach(i => {\n        if (!uniquePestle.includes(i.pestle) && i.pestle !== '') {\n          uniquePestle.push(i.pestle);\n        }\n      });\n      const pestleCount = uniquePestle.map(item => {\n        return {\n          pestle: item,\n          count: serverData.filter(i => i.pestle === item).length\n        };\n      });\n      const width = 600;\n      const height = 400;\n      const margin = {\n        top: 20,\n        right: 20,\n        bottom: 30,\n        left: 50\n      };\n      const svg = d3.select(svgRef.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left}, ${margin.top})`);\n      const x = d3.scaleBand().range([0, width]).padding(0.1).domain(uniquePestle);\n      const y = d3.scaleLinear().range([height, 0]).domain([0, d3.max(pestleCount, d => d.count)]);\n      svg.append('g').attr('transform', `translate(0, ${height})`).call(d3.axisBottom(x));\n      svg.append('g').call(d3.axisLeft(y));\n      svg.selectAll('.line').data([pestleCount]).join('path').attr('fill', 'none').attr('stroke', 'steelblue').attr('stroke-width', 1.5).attr('d', d3.line().x(d => x(d.pestle)).y(d => y(d.count)).curve(d3.curveMonotoneX));\n    } else {\n      console.log('serverData is not an array');\n    }\n  }, [serverData]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n};\n_s(Line, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = Line;\nexport default Line;\nvar _c;\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","Line","serverData","_s","svgRef","console","log","Array","isArray","uniquePestle","forEach","i","includes","pestle","push","pestleCount","map","item","count","filter","length","width","height","margin","top","right","bottom","left","svg","select","current","attr","append","x","scaleBand","range","padding","domain","y","scaleLinear","max","d","call","axisBottom","axisLeft","selectAll","data","join","line","curve","curveMonotoneX","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/visha/OneDrive/Desktop/Data Visualization/dashboard/src/Graphs/Line.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst Line = ({ serverData }) => {\r\n  const svgRef = useRef(null);\r\n  console.log(serverData)\r\n\r\n  useEffect(() => {\r\n    // Check if serverData is an array\r\n    if (Array.isArray(serverData)) {\r\n      let uniquePestle = [];\r\n      serverData.forEach((i) => {\r\n        if (!uniquePestle.includes(i.pestle) && i.pestle !== '') {\r\n          uniquePestle.push(i.pestle);\r\n        }\r\n      });\r\n\r\n      const pestleCount = uniquePestle.map((item) => {\r\n        return {\r\n          pestle: item,\r\n          count: serverData.filter((i) => i.pestle === item).length,\r\n        };\r\n      });\r\n\r\n      const width = 600;\r\n      const height = 400;\r\n      const margin = { top: 20, right: 20, bottom: 30, left: 50 };\r\n\r\n      const svg = d3\r\n        .select(svgRef.current)\r\n        .attr('width', width + margin.left + margin.right)\r\n        .attr('height', height + margin.top + margin.bottom)\r\n        .append('g')\r\n        .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n\r\n      const x = d3\r\n        .scaleBand()\r\n        .range([0, width])\r\n        .padding(0.1)\r\n        .domain(uniquePestle);\r\n\r\n      const y = d3\r\n        .scaleLinear()\r\n        .range([height, 0])\r\n        .domain([0, d3.max(pestleCount, (d) => d.count)]);\r\n\r\n      svg\r\n        .append('g')\r\n        .attr('transform', `translate(0, ${height})`)\r\n        .call(d3.axisBottom(x));\r\n\r\n      svg.append('g').call(d3.axisLeft(y));\r\n\r\n      svg\r\n        .selectAll('.line')\r\n        .data([pestleCount])\r\n        .join('path')\r\n        .attr('fill', 'none')\r\n        .attr('stroke', 'steelblue')\r\n        .attr('stroke-width', 1.5)\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x((d) => x(d.pestle))\r\n            .y((d) => y(d.count))\r\n            .curve(d3.curveMonotoneX)\r\n        );\r\n    } else {\r\n      console.log('serverData is not an array');\r\n    }\r\n  }, [serverData]);\r\n\r\n  return <svg ref={svgRef}></svg>;\r\n};\r\n\r\nexport default Line;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAMC,MAAM,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC3BQ,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;EAEvBN,SAAS,CAAC,MAAM;IACd;IACA,IAAIW,KAAK,CAACC,OAAO,CAACN,UAAU,CAAC,EAAE;MAC7B,IAAIO,YAAY,GAAG,EAAE;MACrBP,UAAU,CAACQ,OAAO,CAAEC,CAAC,IAAK;QACxB,IAAI,CAACF,YAAY,CAACG,QAAQ,CAACD,CAAC,CAACE,MAAM,CAAC,IAAIF,CAAC,CAACE,MAAM,KAAK,EAAE,EAAE;UACvDJ,YAAY,CAACK,IAAI,CAACH,CAAC,CAACE,MAAM,CAAC;QAC7B;MACF,CAAC,CAAC;MAEF,MAAME,WAAW,GAAGN,YAAY,CAACO,GAAG,CAAEC,IAAI,IAAK;QAC7C,OAAO;UACLJ,MAAM,EAAEI,IAAI;UACZC,KAAK,EAAEhB,UAAU,CAACiB,MAAM,CAAER,CAAC,IAAKA,CAAC,CAACE,MAAM,KAAKI,IAAI,CAAC,CAACG;QACrD,CAAC;MACH,CAAC,CAAC;MAEF,MAAMC,KAAK,GAAG,GAAG;MACjB,MAAMC,MAAM,GAAG,GAAG;MAClB,MAAMC,MAAM,GAAG;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC;MAE3D,MAAMC,GAAG,GAAG9B,EAAE,CACX+B,MAAM,CAACzB,MAAM,CAAC0B,OAAO,CAAC,CACtBC,IAAI,CAAC,OAAO,EAAEV,KAAK,GAAGE,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK,CAAC,CACjDM,IAAI,CAAC,QAAQ,EAAET,MAAM,GAAGC,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM,CAAC,CACnDM,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,WAAW,EAAG,aAAYR,MAAM,CAACI,IAAK,KAAIJ,MAAM,CAACC,GAAI,GAAE,CAAC;MAEhE,MAAMS,CAAC,GAAGnC,EAAE,CACToC,SAAS,CAAC,CAAC,CACXC,KAAK,CAAC,CAAC,CAAC,EAAEd,KAAK,CAAC,CAAC,CACjBe,OAAO,CAAC,GAAG,CAAC,CACZC,MAAM,CAAC5B,YAAY,CAAC;MAEvB,MAAM6B,CAAC,GAAGxC,EAAE,CACTyC,WAAW,CAAC,CAAC,CACbJ,KAAK,CAAC,CAACb,MAAM,EAAE,CAAC,CAAC,CAAC,CAClBe,MAAM,CAAC,CAAC,CAAC,EAAEvC,EAAE,CAAC0C,GAAG,CAACzB,WAAW,EAAG0B,CAAC,IAAKA,CAAC,CAACvB,KAAK,CAAC,CAAC,CAAC;MAEnDU,GAAG,CACAI,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,WAAW,EAAG,gBAAeT,MAAO,GAAE,CAAC,CAC5CoB,IAAI,CAAC5C,EAAE,CAAC6C,UAAU,CAACV,CAAC,CAAC,CAAC;MAEzBL,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACU,IAAI,CAAC5C,EAAE,CAAC8C,QAAQ,CAACN,CAAC,CAAC,CAAC;MAEpCV,GAAG,CACAiB,SAAS,CAAC,OAAO,CAAC,CAClBC,IAAI,CAAC,CAAC/B,WAAW,CAAC,CAAC,CACnBgC,IAAI,CAAC,MAAM,CAAC,CACZhB,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAC3BA,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CACzBA,IAAI,CACH,GAAG,EACHjC,EAAE,CACCkD,IAAI,CAAC,CAAC,CACNf,CAAC,CAAEQ,CAAC,IAAKR,CAAC,CAACQ,CAAC,CAAC5B,MAAM,CAAC,CAAC,CACrByB,CAAC,CAAEG,CAAC,IAAKH,CAAC,CAACG,CAAC,CAACvB,KAAK,CAAC,CAAC,CACpB+B,KAAK,CAACnD,EAAE,CAACoD,cAAc,CAC5B,CAAC;IACL,CAAC,MAAM;MACL7C,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C;EACF,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,oBAAOF,OAAA;IAAKmD,GAAG,EAAE/C;EAAO;IAAAgD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACjC,CAAC;AAACpD,EAAA,CAvEIF,IAAI;AAAAuD,EAAA,GAAJvD,IAAI;AAyEV,eAAeA,IAAI;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}