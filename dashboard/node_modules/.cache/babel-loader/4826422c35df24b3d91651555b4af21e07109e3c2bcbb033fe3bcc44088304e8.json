{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\OneDrive\\\\Desktop\\\\Data Visualization\\\\dashboard\\\\src\\\\Graphs\\\\Doghnut.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Doghnut = ({\n  serverData\n}) => {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    let uniqueSectors = [];\n    serverData.data.forEach(i => {\n      if (!uniqueSectors.includes(i.sector) && i.sector !== \"\") {\n        uniqueSectors.push(i.sector);\n      }\n    });\n    let uniqueTopics = [];\n    serverData.data.forEach(i => {\n      if (!uniqueTopics.includes(i.topic) && i.topic !== \"\") {\n        uniqueTopics.push(i.topic);\n      }\n    });\n    let uniqueRegion = [];\n    serverData.data.forEach(i => {\n      if (!uniqueRegion.includes(i.region) && i.region !== \"\") {\n        uniqueRegion.push(i.region);\n      }\n    });\n    let uniqueCountry = [];\n    serverData.data.forEach(i => {\n      if (!uniqueCountry.includes(i.country) && i.country !== \"\") {\n        uniqueCountry.push(i.country);\n      }\n    });\n    let uniqueSource = [];\n    serverData.data.forEach(i => {\n      if (!uniqueSource.includes(i.source) && i.source !== \"\") {\n        uniqueSource.push(i.source);\n      }\n    });\n    let uniquePestle = [];\n    serverData.data.forEach(i => {\n      if (!uniquePestle.includes(i.pestle) && i.pestle !== \"\") {\n        uniquePestle.push(i.pestle);\n      }\n    });\n    const data = [uniqueCountry.length, uniqueRegion.length, uniqueSource.length, uniqueTopics.length, uniqueSectors.length, uniquePestle.length];\n    const labels = [\"Country\", \"Region\", \"Source\", \"Topic\", \"Sector\", \"Pestle\"];\n    const width = 400;\n    const height = 400;\n    const margin = 10;\n    const radius = Math.min(width, height) / 2 - margin;\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n    const arc = d3.arc().outerRadius(radius - 10).innerRadius(radius - 70);\n    const pie = d3.pie().sort(null).value(d => d);\n    const svg = d3.select(ref.current).attr('width', width).attr('height', height).append('g').attr('transform', `translate(${width / 2}, ${height / 2})`);\n    const arcs = svg.selectAll('.arc').data(pie(data)).enter().append('g').attr('class', 'arc');\n    arcs.append('path').attr('d', arc).style('fill', (d, i) => color(i));\n    arcs.append('text').attr('transform', d => `translate(${arc.centroid(d)})`).attr('dy', '0.35em').text((d, i) => labels[i]);\n  }, [serverData.data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 12\n  }, this);\n};\n_s(Doghnut, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = Doghnut;\nexport default Doghnut;\nvar _c;\n$RefreshReg$(_c, \"Doghnut\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","Doghnut","serverData","_s","ref","uniqueSectors","data","forEach","i","includes","sector","push","uniqueTopics","topic","uniqueRegion","region","uniqueCountry","country","uniqueSource","source","uniquePestle","pestle","length","labels","width","height","margin","radius","Math","min","color","scaleOrdinal","schemeCategory10","arc","outerRadius","innerRadius","pie","sort","value","d","svg","select","current","attr","append","arcs","selectAll","enter","style","centroid","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/visha/OneDrive/Desktop/Data Visualization/dashboard/src/Graphs/Doghnut.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst Doghnut = ({ serverData }) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        let uniqueSectors = [];\r\n        serverData.data.forEach((i) => {\r\n            if (!uniqueSectors.includes(i.sector) && i.sector !== \"\") {\r\n                uniqueSectors.push(i.sector);\r\n            }\r\n        });\r\n\r\n        let uniqueTopics = [];\r\n        serverData.data.forEach((i) => {\r\n            if (!uniqueTopics.includes(i.topic) && i.topic !== \"\") {\r\n                uniqueTopics.push(i.topic);\r\n            }\r\n        });\r\n\r\n        let uniqueRegion = [];\r\n        serverData.data.forEach((i) => {\r\n            if (!uniqueRegion.includes(i.region) && i.region !== \"\") {\r\n                uniqueRegion.push(i.region);\r\n            }\r\n        });\r\n\r\n        let uniqueCountry = [];\r\n        serverData.data.forEach((i) => {\r\n            if (!uniqueCountry.includes(i.country) && i.country !== \"\") {\r\n                uniqueCountry.push(i.country);\r\n            }\r\n        });\r\n\r\n        let uniqueSource = [];\r\n        serverData.data.forEach((i) => {\r\n            if (!uniqueSource.includes(i.source) && i.source !== \"\") {\r\n                uniqueSource.push(i.source);\r\n            }\r\n        });\r\n\r\n        let uniquePestle = [];\r\n        serverData.data.forEach((i) => {\r\n            if (!uniquePestle.includes(i.pestle) && i.pestle !== \"\") {\r\n                uniquePestle.push(i.pestle);\r\n            }\r\n        });\r\n\r\n        const data = [uniqueCountry.length, uniqueRegion.length, uniqueSource.length, uniqueTopics.length, uniqueSectors.length, uniquePestle.length];\r\n        const labels = [\"Country\", \"Region\", \"Source\", \"Topic\", \"Sector\", \"Pestle\"];\r\n        \r\n        const width = 400;\r\n        const height = 400;\r\n        const margin = 10;\r\n\r\n        const radius = Math.min(width, height) / 2 - margin;\r\n        const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n        const arc = d3.arc()\r\n            .outerRadius(radius - 10)\r\n            .innerRadius(radius - 70);\r\n\r\n        const pie = d3.pie()\r\n            .sort(null)\r\n            .value(d => d);\r\n\r\n        const svg = d3.select(ref.current)\r\n            .attr('width', width)\r\n            .attr('height', height)\r\n            .append('g')\r\n            .attr('transform', `translate(${width / 2}, ${height / 2})`);\r\n\r\n        const arcs = svg.selectAll('.arc')\r\n            .data(pie(data))\r\n            .enter().append('g')\r\n            .attr('class', 'arc');\r\n\r\n        arcs.append('path')\r\n            .attr('d', arc)\r\n            .style('fill', (d, i) => color(i));\r\n\r\n        arcs.append('text')\r\n            .attr('transform', d => `translate(${arc.centroid(d)})`)\r\n            .attr('dy', '0.35em')\r\n            .text((d, i) => labels[i]);\r\n\r\n    }, [serverData.data]);\r\n\r\n    return <svg ref={ref}></svg>;\r\n};\r\n\r\nexport default Doghnut;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}