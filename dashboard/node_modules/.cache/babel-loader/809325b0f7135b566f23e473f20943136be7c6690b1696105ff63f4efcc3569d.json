{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\OneDrive\\\\Desktop\\\\Data Visualization\\\\dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Accordion from \"./Accordian/Accordian\";\nimport '';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let url = \"http://localhost:5000/api/data/all\";\n        if (selectedYear) {\n          url = `http://localhost:5000/api/data/year/${selectedYear}`;\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n        const fetchedData = await response.json();\n        setData(fetchedData);\n        console.log(fetchedData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [selectedYear]);\n  const handleYearChange = e => {\n    setSelectedYear(e.target.value);\n  };\n  const startYear = 2000;\n  const endYear = 2050;\n  const years = Array.from({\n    length: endYear - startYear + 1\n  }, (_, index) => startYear + index);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedYear || '',\n            onChange: handleYearChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Years\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: year,\n              children: year\n            }, year, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dm9rJWMgeWqMb6mbIKPLMSj4inU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Accordion","jsxDEV","_jsxDEV","App","_s","data","setData","selectedYear","setSelectedYear","fetchData","url","response","fetch","ok","Error","fetchedData","json","console","log","error","handleYearChange","e","target","value","startYear","endYear","years","Array","from","length","_","index","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","year","_c","$RefreshReg$"],"sources":["C:/Users/visha/OneDrive/Desktop/Data Visualization/dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Accordion from \"./Accordian/Accordian\";\nimport ''\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let url = \"http://localhost:5000/api/data/all\";\n        if (selectedYear) {\n          url = `http://localhost:5000/api/data/year/${selectedYear}`;\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n        const fetchedData = await response.json();\n        setData(fetchedData);\n        console.log(fetchedData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [selectedYear]);\n\n  const handleYearChange = (e) => {\n    setSelectedYear(e.target.value);\n  };\n\n  \n\n  const startYear = 2000;\n  const endYear = 2050;\n  const years = Array.from(\n    { length: endYear - startYear + 1 },\n    (_, index) => startYear + index\n  );\n\n  return (\n    <div>\n      <nav>\n        <ul>\n          <li>\n            <select value={selectedYear || ''} onChange={handleYearChange}>\n              <option value=\"\">All Years</option>\n              {years.map((year) => (\n                <option key={year} value={year}>\n                  {year}\n                </option>\n              ))}\n            </select>\n          </li>\n        </ul>\n      </nav>\n     \n      <Accordion data={data} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}