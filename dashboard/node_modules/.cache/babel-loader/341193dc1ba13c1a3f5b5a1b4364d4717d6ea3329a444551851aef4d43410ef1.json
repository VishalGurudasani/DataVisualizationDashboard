{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\OneDrive\\\\Desktop\\\\Data Visualization\\\\dashboard\\\\src\\\\Accordian\\\\Filter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter = ({\n  data,\n  onDataFiltered\n}) => {\n  _s();\n  const [selectedYear, setSelectedYear] = useState('');\n  const handleFilter = () => {\n    const filteredData = selectedYear ? data.data.filter(item => item.year === selectedYear) : data;\n    onDataFiltered(filteredData);\n  };\n\n  // Generate years from 2000 to 2040\n  const startYear = 2000;\n  const endYear = 2040;\n  const years = Array.from({\n    length: endYear - startYear + 1\n  }, (_, index) => startYear + index);\n  console;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"year\",\n      children: \"Select Year:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"year\",\n      value: selectedYear,\n      onChange: e => setSelectedYear(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Years\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: year,\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFilter,\n      children: \"Apply Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Filter, \"/Sbr0YwGFhBaOFEfzmYTMgQZu1c=\");\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Filter","data","onDataFiltered","_s","selectedYear","setSelectedYear","handleFilter","filteredData","filter","item","year","startYear","endYear","years","Array","from","length","_","index","console","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/visha/OneDrive/Desktop/Data Visualization/dashboard/src/Accordian/Filter.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Filter = ({ data, onDataFiltered }) => {\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  \r\n  const handleFilter = () => {\r\n    const filteredData = selectedYear ? data.data.filter(item => item.year === selectedYear) : data;\r\n    onDataFiltered(filteredData);\r\n  };\r\n\r\n  // Generate years from 2000 to 2040\r\n  const startYear = 2000;\r\n  const endYear = 2040;\r\n  const years = Array.from({ length: endYear - startYear + 1 }, (_, index) => startYear + index);\r\n\r\n  console\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"year\">Select Year:</label>\r\n      <select id=\"year\" value={selectedYear} onChange={(e) => setSelectedYear(e.target.value)}>\r\n        <option value=\"\">All Years</option>\r\n        {years.map(year => (\r\n          <option key={year} value={year}>{year}</option>\r\n        ))}\r\n      </select>\r\n      <button onClick={handleFilter}>Apply Filter</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAGH,YAAY,GAAGH,IAAI,CAACA,IAAI,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKN,YAAY,CAAC,GAAGH,IAAI;IAC/FC,cAAc,CAACK,YAAY,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMI,SAAS,GAAG,IAAI;EACtB,MAAMC,OAAO,GAAG,IAAI;EACpB,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEJ,OAAO,GAAGD,SAAS,GAAG;EAAE,CAAC,EAAE,CAACM,CAAC,EAAEC,KAAK,KAAKP,SAAS,GAAGO,KAAK,CAAC;EAE9FC,OAAO;EAEP,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAOsB,OAAO,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1C1B,OAAA;MAAQ2B,EAAE,EAAC,MAAM;MAACC,KAAK,EAAEvB,YAAa;MAACwB,QAAQ,EAAGC,CAAC,IAAKxB,eAAe,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAP,QAAA,gBACtFrB,OAAA;QAAQ4B,KAAK,EAAC,EAAE;QAAAP,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAClCZ,KAAK,CAACkB,GAAG,CAACrB,IAAI,iBACbX,OAAA;QAAmB4B,KAAK,EAAEjB,IAAK;QAAAU,QAAA,EAAEV;MAAI,GAAxBA,IAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACT1B,OAAA;MAAQiC,OAAO,EAAE1B,YAAa;MAAAc,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAACtB,EAAA,CA3BIH,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AA6BZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}