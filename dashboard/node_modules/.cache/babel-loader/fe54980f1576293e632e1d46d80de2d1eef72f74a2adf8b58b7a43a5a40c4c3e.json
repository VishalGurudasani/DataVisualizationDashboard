{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\OneDrive\\\\Desktop\\\\Data Visualization\\\\dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Accordion from \"./Accordian/Accordian\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedYear, setSelectedYear] = uses;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let url = \"http://localhost:5000/api/data/all\";\n        if (selectedYear) {\n          url = `http://localhost:5000/api/data/year/${selectedYear}`;\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setData(data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [selectedYear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Accordion","jsxDEV","_jsxDEV","App","_s","data","setData","selectedYear","setSelectedYear","uses","fetchData","url","response","fetch","ok","Error","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/visha/OneDrive/Desktop/Data Visualization/dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Accordion from \"./Accordian/Accordian\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [selectedYear,setSelectedYear] = uses\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let url = \"http://localhost:5000/api/data/all\";\n        if (selectedYear) {\n          url = `http://localhost:5000/api/data/year/${selectedYear}`;\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setData(data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n  \n    fetchData();\n  }, [selectedYear]);\n\n  return (\n    <div>\n      <Accordion data={data} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,YAAY,EAACC,eAAe,CAAC,GAAGC,IAAI;EAE3CV,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,IAAIC,GAAG,GAAG,oCAAoC;QAC9C,IAAIJ,YAAY,EAAE;UAChBI,GAAG,GAAI,uCAAsCJ,YAAa,EAAC;QAC7D;QACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QACA,MAAMV,IAAI,GAAG,MAAMO,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCV,OAAO,CAACD,IAAI,CAAC;MACf,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAElB,oBACEL,OAAA;IAAAiB,QAAA,eACEjB,OAAA,CAACF,SAAS;MAACK,IAAI,EAAEA;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAACnB,EAAA,CA9BID,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAgCT,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}