{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\OneDrive\\\\Desktop\\\\Data Visualization\\\\dashboard\\\\src\\\\Graphs\\\\Polar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Polar = ({\n  serverData\n}) => {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    let uniqueSectors = [];\n    let uniqueTopics = [];\n    let uniqueRegion = [];\n    let uniqueCountry = [];\n    let uniqueSource = [];\n    let uniquePestle = [];\n    serverData.data.forEach(i => {\n      if (!uniqueSectors.includes(i.sector) && i.sector !== '') {\n        uniqueSectors.push(i.sector);\n      }\n      if (!uniqueTopics.includes(i.topic) && i.topic !== '') {\n        uniqueTopics.push(i.topic);\n      }\n      if (!uniqueRegion.includes(i.region) && i.region !== '') {\n        uniqueRegion.push(i.region);\n      }\n      if (!uniqueCountry.includes(i.country) && i.country !== '') {\n        uniqueCountry.push(i.country);\n      }\n      if (!uniqueSource.includes(i.source) && i.source !== '') {\n        uniqueSource.push(i.source);\n      }\n      if (!uniquePestle.includes(i.pestle) && i.pestle !== '') {\n        uniquePestle.push(i.pestle);\n      }\n    });\n    const data = [uniqueCountry.length, uniqueRegion.length, uniqueSource.length, uniqueTopics.length, uniqueSectors.length, uniquePestle.length];\n    const labels = ['Country', 'Region', 'Source', 'Topic', 'Sector', 'Pestle'];\n    const width = 400;\n    const height = 400;\n    const radius = Math.min(width, height) / 2;\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n    const arc = d3.arc().innerRadius(radius - 70).outerRadius(radius);\n    const pie = d3.pie().sort(null).value(d => d);\n    const svg = d3.select(ref.current).attr('width', width).attr('height', height).append('g').attr('transform', `translate(${width / 2}, ${height / 2})`);\n    const arcs = svg.selectAll('.arc').data(pie(data)).enter().append('g').attr('class', 'arc');\n    arcs.append('path').attr('d', arc).style('fill', (d, i) => color(i));\n    const legend = svg.selectAll('.legend').data(labels).enter().append('g').attr('class', 'legend').attr('transform', (d, i) => `translate(${radius + 20}, ${i * 20})`);\n    legend.append('rect').attr('width', 10).attr('height', 10).style('fill', (d, i) => color(i));\n    legend.append('text').attr('x', 15).attr('y', 10).text(d => d);\n  }, [serverData]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 10\n  }, this);\n};\n_s(Polar, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = Polar;\nexport default Polar;\nvar _c;\n$RefreshReg$(_c, \"Polar\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","Polar","serverData","_s","ref","uniqueSectors","uniqueTopics","uniqueRegion","uniqueCountry","uniqueSource","uniquePestle","data","forEach","i","includes","sector","push","topic","region","country","source","pestle","length","labels","width","height","radius","Math","min","color","scaleOrdinal","schemeCategory10","arc","innerRadius","outerRadius","pie","sort","value","d","svg","select","current","attr","append","arcs","selectAll","enter","style","legend","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/visha/OneDrive/Desktop/Data Visualization/dashboard/src/Graphs/Polar.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst Polar = ({ serverData }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    let uniqueSectors = [];\r\n    let uniqueTopics = [];\r\n    let uniqueRegion = [];\r\n    let uniqueCountry = [];\r\n    let uniqueSource = [];\r\n    let uniquePestle = [];\r\n\r\n    serverData.data.forEach((i) => {\r\n      if (!uniqueSectors.includes(i.sector) && i.sector !== '') {\r\n        uniqueSectors.push(i.sector);\r\n      }\r\n      if (!uniqueTopics.includes(i.topic) && i.topic !== '') {\r\n        uniqueTopics.push(i.topic);\r\n      }\r\n      if (!uniqueRegion.includes(i.region) && i.region !== '') {\r\n        uniqueRegion.push(i.region);\r\n      }\r\n      if (!uniqueCountry.includes(i.country) && i.country !== '') {\r\n        uniqueCountry.push(i.country);\r\n      }\r\n      if (!uniqueSource.includes(i.source) && i.source !== '') {\r\n        uniqueSource.push(i.source);\r\n      }\r\n      if (!uniquePestle.includes(i.pestle) && i.pestle !== '') {\r\n        uniquePestle.push(i.pestle);\r\n      }\r\n    });\r\n\r\n    const data = [\r\n      uniqueCountry.length,\r\n      uniqueRegion.length,\r\n      uniqueSource.length,\r\n      uniqueTopics.length,\r\n      uniqueSectors.length,\r\n      uniquePestle.length,\r\n    ];\r\n    const labels = ['Country', 'Region', 'Source', 'Topic', 'Sector', 'Pestle'];\r\n    const width = 400;\r\n    const height = 400;\r\n    const radius = Math.min(width, height) / 2;\r\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n    const arc = d3\r\n      .arc()\r\n      .innerRadius(radius - 70)\r\n      .outerRadius(radius);\r\n    const pie = d3.pie().sort(null).value((d) => d);\r\n\r\n    const svg = d3\r\n      .select(ref.current)\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', `translate(${width / 2}, ${height / 2})`);\r\n\r\n    const arcs = svg\r\n      .selectAll('.arc')\r\n      .data(pie(data))\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', 'arc');\r\n\r\n    arcs\r\n      .append('path')\r\n      .attr('d', arc)\r\n      .style('fill', (d, i) => color(i));\r\n\r\n    \r\n    const legend = svg\r\n      .selectAll('.legend')\r\n      .data(labels)\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', 'legend')\r\n      .attr('transform', (d, i) => `translate(${radius + 20}, ${i * 20})`);\r\n\r\n    \r\n    legend\r\n      .append('rect')\r\n      .attr('width', 10)\r\n      .attr('height', 10)\r\n      .style('fill', (d, i) => color(i));\r\n\r\n    \r\n    legend.append('text').attr('x', 15).attr('y', 10).text((d) => d);\r\n  }, [serverData]);\r\n\r\n  return <svg ref={ref}></svg>;\r\n};\r\n\r\nexport default Polar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAMC,GAAG,GAAGR,MAAM,CAAC,CAAC;EAEpBC,SAAS,CAAC,MAAM;IACd,IAAIQ,aAAa,GAAG,EAAE;IACtB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,aAAa,GAAG,EAAE;IACtB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,YAAY,GAAG,EAAE;IAErBR,UAAU,CAACS,IAAI,CAACC,OAAO,CAAEC,CAAC,IAAK;MAC7B,IAAI,CAACR,aAAa,CAACS,QAAQ,CAACD,CAAC,CAACE,MAAM,CAAC,IAAIF,CAAC,CAACE,MAAM,KAAK,EAAE,EAAE;QACxDV,aAAa,CAACW,IAAI,CAACH,CAAC,CAACE,MAAM,CAAC;MAC9B;MACA,IAAI,CAACT,YAAY,CAACQ,QAAQ,CAACD,CAAC,CAACI,KAAK,CAAC,IAAIJ,CAAC,CAACI,KAAK,KAAK,EAAE,EAAE;QACrDX,YAAY,CAACU,IAAI,CAACH,CAAC,CAACI,KAAK,CAAC;MAC5B;MACA,IAAI,CAACV,YAAY,CAACO,QAAQ,CAACD,CAAC,CAACK,MAAM,CAAC,IAAIL,CAAC,CAACK,MAAM,KAAK,EAAE,EAAE;QACvDX,YAAY,CAACS,IAAI,CAACH,CAAC,CAACK,MAAM,CAAC;MAC7B;MACA,IAAI,CAACV,aAAa,CAACM,QAAQ,CAACD,CAAC,CAACM,OAAO,CAAC,IAAIN,CAAC,CAACM,OAAO,KAAK,EAAE,EAAE;QAC1DX,aAAa,CAACQ,IAAI,CAACH,CAAC,CAACM,OAAO,CAAC;MAC/B;MACA,IAAI,CAACV,YAAY,CAACK,QAAQ,CAACD,CAAC,CAACO,MAAM,CAAC,IAAIP,CAAC,CAACO,MAAM,KAAK,EAAE,EAAE;QACvDX,YAAY,CAACO,IAAI,CAACH,CAAC,CAACO,MAAM,CAAC;MAC7B;MACA,IAAI,CAACV,YAAY,CAACI,QAAQ,CAACD,CAAC,CAACQ,MAAM,CAAC,IAAIR,CAAC,CAACQ,MAAM,KAAK,EAAE,EAAE;QACvDX,YAAY,CAACM,IAAI,CAACH,CAAC,CAACQ,MAAM,CAAC;MAC7B;IACF,CAAC,CAAC;IAEF,MAAMV,IAAI,GAAG,CACXH,aAAa,CAACc,MAAM,EACpBf,YAAY,CAACe,MAAM,EACnBb,YAAY,CAACa,MAAM,EACnBhB,YAAY,CAACgB,MAAM,EACnBjB,aAAa,CAACiB,MAAM,EACpBZ,YAAY,CAACY,MAAM,CACpB;IACD,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAC3E,MAAMC,KAAK,GAAG,GAAG;IACjB,MAAMC,MAAM,GAAG,GAAG;IAClB,MAAMC,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACJ,KAAK,EAAEC,MAAM,CAAC,GAAG,CAAC;IAC1C,MAAMI,KAAK,GAAG/B,EAAE,CAACgC,YAAY,CAAChC,EAAE,CAACiC,gBAAgB,CAAC;IAClD,MAAMC,GAAG,GAAGlC,EAAE,CACXkC,GAAG,CAAC,CAAC,CACLC,WAAW,CAACP,MAAM,GAAG,EAAE,CAAC,CACxBQ,WAAW,CAACR,MAAM,CAAC;IACtB,MAAMS,GAAG,GAAGrC,EAAE,CAACqC,GAAG,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAACC,KAAK,CAAEC,CAAC,IAAKA,CAAC,CAAC;IAE/C,MAAMC,GAAG,GAAGzC,EAAE,CACX0C,MAAM,CAACpC,GAAG,CAACqC,OAAO,CAAC,CACnBC,IAAI,CAAC,OAAO,EAAElB,KAAK,CAAC,CACpBkB,IAAI,CAAC,QAAQ,EAAEjB,MAAM,CAAC,CACtBkB,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,WAAW,EAAG,aAAYlB,KAAK,GAAG,CAAE,KAAIC,MAAM,GAAG,CAAE,GAAE,CAAC;IAE9D,MAAMmB,IAAI,GAAGL,GAAG,CACbM,SAAS,CAAC,MAAM,CAAC,CACjBlC,IAAI,CAACwB,GAAG,CAACxB,IAAI,CAAC,CAAC,CACfmC,KAAK,CAAC,CAAC,CACPH,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;IAEvBE,IAAI,CACDD,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,GAAG,EAAEV,GAAG,CAAC,CACde,KAAK,CAAC,MAAM,EAAE,CAACT,CAAC,EAAEzB,CAAC,KAAKgB,KAAK,CAAChB,CAAC,CAAC,CAAC;IAGpC,MAAMmC,MAAM,GAAGT,GAAG,CACfM,SAAS,CAAC,SAAS,CAAC,CACpBlC,IAAI,CAACY,MAAM,CAAC,CACZuB,KAAK,CAAC,CAAC,CACPH,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CACvBA,IAAI,CAAC,WAAW,EAAE,CAACJ,CAAC,EAAEzB,CAAC,KAAM,aAAYa,MAAM,GAAG,EAAG,KAAIb,CAAC,GAAG,EAAG,GAAE,CAAC;IAGtEmC,MAAM,CACHL,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CACjBA,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAClBK,KAAK,CAAC,MAAM,EAAE,CAACT,CAAC,EAAEzB,CAAC,KAAKgB,KAAK,CAAChB,CAAC,CAAC,CAAC;IAGpCmC,MAAM,CAACL,MAAM,CAAC,MAAM,CAAC,CAACD,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAACA,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAACO,IAAI,CAAEX,CAAC,IAAKA,CAAC,CAAC;EAClE,CAAC,EAAE,CAACpC,UAAU,CAAC,CAAC;EAEhB,oBAAOF,OAAA;IAAKI,GAAG,EAAEA;EAAI;IAAA8C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC9B,CAAC;AAAClD,EAAA,CA3FIF,KAAK;AAAAqD,EAAA,GAALrD,KAAK;AA6FX,eAAeA,KAAK;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}