{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\OneDrive\\\\Desktop\\\\Data Visualization\\\\dashboard\\\\src\\\\Accordian\\\\Filter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter = ({\n  onDataFiltered\n}) => {\n  _s();\n  const [selectedYear, setSelectedYear] = useState('');\n  const handleFilter = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/data/${selectedYear}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const responseData = await response.json();\n      if (responseData.success) {\n        onDataFiltered(responseData.data.data);\n      } else {\n        console.log(responseData.message); // Log the message indicating no data found\n        onDataFiltered([]); // Pass an empty array to indicate no data found\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  // Generate years from 2000 to 2040\n  const startYear = 2000;\n  const endYear = 2040;\n  const years = Array.from({\n    length: endYear - startYear + 1\n  }, (_, index) => startYear + index);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"year\",\n      children: \"Select Year:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"year\",\n      value: selectedYear,\n      onChange: e => setSelectedYear(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Years\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: year,\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFilter,\n      children: \"Apply Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Filter, \"/Sbr0YwGFhBaOFEfzmYTMgQZu1c=\");\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Filter","onDataFiltered","_s","selectedYear","setSelectedYear","handleFilter","response","fetch","ok","Error","responseData","json","success","data","console","log","message","error","startYear","endYear","years","Array","from","length","_","index","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","map","year","onClick","_c","$RefreshReg$"],"sources":["C:/Users/visha/OneDrive/Desktop/Data Visualization/dashboard/src/Accordian/Filter.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Filter = ({ onDataFiltered }) => {\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  \r\n  const handleFilter = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/data/${selectedYear}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch data');\r\n      }\r\n      const responseData = await response.json();\r\n      if (responseData.success) {\r\n        onDataFiltered(responseData.data.data);\r\n      } else {\r\n        console.log(responseData.message); // Log the message indicating no data found\r\n        onDataFiltered([]); // Pass an empty array to indicate no data found\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  // Generate years from 2000 to 2040\r\n  const startYear = 2000;\r\n  const endYear = 2040;\r\n  const years = Array.from({ length: endYear - startYear + 1 }, (_, index) => startYear + index);\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"year\">Select Year:</label>\r\n      <select id=\"year\" value={selectedYear} onChange={(e) => setSelectedYear(e.target.value)}>\r\n        <option value=\"\">All Years</option>\r\n        {years.map(year => (\r\n          <option key={year} value={year}>{year}</option>\r\n        ))}\r\n      </select>\r\n      <button onClick={handleFilter}>Apply Filter</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiCJ,YAAa,EAAC,CAAC;MAC9E,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1C,IAAID,YAAY,CAACE,OAAO,EAAE;QACxBX,cAAc,CAACS,YAAY,CAACG,IAAI,CAACA,IAAI,CAAC;MACxC,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAACL,YAAY,CAACM,OAAO,CAAC,CAAC,CAAC;QACnCf,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;MACtB;IACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,IAAI;EACtB,MAAMC,OAAO,GAAG,IAAI;EACpB,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEJ,OAAO,GAAGD,SAAS,GAAG;EAAE,CAAC,EAAE,CAACM,CAAC,EAAEC,KAAK,KAAKP,SAAS,GAAGO,KAAK,CAAC;EAI9F,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAO4B,OAAO,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1ChC,OAAA;MAAQiC,EAAE,EAAC,MAAM;MAACC,KAAK,EAAE9B,YAAa;MAAC+B,QAAQ,EAAGC,CAAC,IAAK/B,eAAe,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAP,QAAA,gBACtF3B,OAAA;QAAQkC,KAAK,EAAC,EAAE;QAAAP,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAClCX,KAAK,CAACiB,GAAG,CAACC,IAAI,iBACbvC,OAAA;QAAmBkC,KAAK,EAAEK,IAAK;QAAAZ,QAAA,EAAEY;MAAI,GAAxBA,IAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACThC,OAAA;MAAQwC,OAAO,EAAElC,YAAa;MAAAqB,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAxCIF,MAAM;AAAAwC,EAAA,GAANxC,MAAM;AA0CZ,eAAeA,MAAM;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}