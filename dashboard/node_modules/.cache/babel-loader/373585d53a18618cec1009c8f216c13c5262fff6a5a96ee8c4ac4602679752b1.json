{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\OneDrive\\\\Desktop\\\\Data Visualization\\\\dashboard\\\\src\\\\Graphs\\\\Pgraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pgraph = ({\n  serverData\n}) => {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    d3.select(ref.current).selectAll('*').remove();\n    let uniquePestle = [];\n    serverData.data.forEach(i => {\n      if (!uniquePestle.includes(i.pestle) && i.pestle !== '') {\n        uniquePestle.push(i.pestle);\n      }\n    });\n    const pestleCount = uniquePestle.map(item => ({\n      pestle: item,\n      count: serverData.data.filter(i => i.pestle === item).length\n    }));\n    const labels = ['Country', 'Region', 'Source', 'Topic', 'Sector', 'Pestle'];\n    const width = 400;\n    const height = 400;\n    const radius = Math.min(width, height) / 2;\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n    const arc = d3.arc().outerRadius(radius - 10).innerRadius(0);\n    const pie = d3.pie().sort(null).value(d => d.count);\n    const svg = d3.select(ref.current).attr('width', width).attr('height', height).append('g').attr('transform', `translate(${width / 2}, ${height / 2})`);\n    const g = svg.selectAll('.arc').data(pie(pestleCount)).enter().append('g').attr('class', 'arc');\n    g.append('path').attr('d', arc).style('fill', (d, i) => color(i));\n    const legend = svg.selectAll('.legend').data(pestleCount).enter().append('g').attr('class', 'legend').attr('transform', (d, i) => `translate(${radius + 20}, ${i * 20})`);\n    legend.append('rect').attr('width', 10).attr('height', 10).style('fill', (d, i) => color(i));\n    legend.append('text').attr('x', 15).attr('y', 10).text(d => d.pestle);\n  }, [serverData.data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n};\n_s(Pgraph, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = Pgraph;\nexport default Pgraph;\nvar _c;\n$RefreshReg$(_c, \"Pgraph\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","Pgraph","serverData","_s","ref","select","current","selectAll","remove","uniquePestle","data","forEach","i","includes","pestle","push","pestleCount","map","item","count","filter","length","labels","width","height","radius","Math","min","color","scaleOrdinal","schemeCategory10","arc","outerRadius","innerRadius","pie","sort","value","d","svg","attr","append","g","enter","style","legend","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/visha/OneDrive/Desktop/Data Visualization/dashboard/src/Graphs/Pgraph.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst Pgraph = ({ serverData }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    d3.select(ref.current).selectAll('*').remove();\r\n    let uniquePestle = [];\r\n    serverData.data.forEach((i) => {\r\n      if (!uniquePestle.includes(i.pestle) && i.pestle !== '') {\r\n        uniquePestle.push(i.pestle);\r\n      }\r\n    });\r\n\r\n    const pestleCount = uniquePestle.map((item) => ({\r\n      pestle: item,\r\n      count: serverData.data.filter((i) => i.pestle === item).length,\r\n    }));\r\n    const labels = ['Country', 'Region', 'Source', 'Topic', 'Sector', 'Pestle'];\r\n    const width = 400;\r\n    const height = 400;\r\n    const radius = Math.min(width, height) / 2;\r\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n    const arc = d3\r\n      .arc()\r\n      .outerRadius(radius - 10)\r\n      .innerRadius(0);\r\n    const pie = d3\r\n      .pie()\r\n      .sort(null)\r\n      .value((d) => d.count);\r\n\r\n    const svg = d3\r\n      .select(ref.current)\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', `translate(${width / 2}, ${height / 2})`);\r\n\r\n    const g = svg\r\n      .selectAll('.arc')\r\n      .data(pie(pestleCount))\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', 'arc');\r\n\r\n    g.append('path')\r\n      .attr('d', arc)\r\n      .style('fill', (d, i) => color(i));\r\n\r\n    \r\n    const legend = svg\r\n      .selectAll('.legend')\r\n      .data(pestleCount)\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', 'legend')\r\n      .attr('transform', (d, i) => `translate(${radius + 20}, ${i * 20})`);\r\n\r\n   \r\n    legend\r\n      .append('rect')\r\n      .attr('width', 10)\r\n      .attr('height', 10)\r\n      .style('fill', (d, i) => color(i));\r\n\r\n    \r\n    legend\r\n      .append('text')\r\n      .attr('x', 15)\r\n      .attr('y', 10)\r\n      .text((d) => d.pestle);\r\n  }, [serverData.data]);\r\n\r\n  return <svg ref={ref}></svg>;\r\n};\r\n\r\nexport default Pgraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}