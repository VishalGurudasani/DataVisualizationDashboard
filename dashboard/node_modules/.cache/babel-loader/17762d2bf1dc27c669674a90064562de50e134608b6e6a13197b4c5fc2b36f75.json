{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\OneDrive\\\\Desktop\\\\Data Visualization\\\\dashboard\\\\src\\\\Graphs\\\\Doghnut.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Doghnut = ({\n  serverData\n}) => {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    let uniqueSectors = [];\n    serverData.forEach(i => {\n      if (!uniqueSectors.includes(i.sector) && i.sector !== '') {\n        uniqueSectors.push(i.sector);\n      }\n    });\n    let uniqueTopics = [];\n    serverData.forEach(i => {\n      if (!uniqueTopics.includes(i.topic) && i.topic !== '') {\n        uniqueTopics.push(i.topic);\n      }\n    });\n    let uniqueRegion = [];\n    serverData.forEach(i => {\n      if (!uniqueRegion.includes(i.region) && i.region !== '') {\n        uniqueRegion.push(i.region);\n      }\n    });\n    let uniqueCountry = [];\n    serverData.forEach(i => {\n      if (!uniqueCountry.includes(i.country) && i.country !== '') {\n        uniqueCountry.push(i.country);\n      }\n    });\n    let uniqueSource = [];\n    serverData.forEach(i => {\n      if (!uniqueSource.includes(i.source) && i.source !== '') {\n        uniqueSource.push(i.source);\n      }\n    });\n    let uniquePestle = [];\n    serverData.forEach(i => {\n      if (!uniquePestle.includes(i.pestle) && i.pestle !== '') {\n        uniquePestle.push(i.pestle);\n      }\n    });\n    const data = [uniqueCountry.length, uniqueRegion.length, uniqueSource.length, uniqueTopics.length, uniqueSectors.length, uniquePestle.length];\n    const labels = ['Country', 'Region', 'Source', 'Topic', 'Sector', 'Pestle'];\n    const width = 600;\n    const height = 400;\n    const margin = 10;\n    const radius = Math.min(width, height) / 2 - margin;\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n    const arc = d3.arc().outerRadius(radius - 10).innerRadius(radius - 70);\n    const pie = d3.pie().sort(null).value(d => d);\n    const svg = d3.select(ref.current).attr('width', width).attr('height', height).append('g').attr('transform', `translate(${width / 2}, ${height / 2})`);\n    const arcs = svg.selectAll('.arc').data(pie(data)).enter().append('g').attr('class', 'arc');\n    arcs.append('path').attr('d', arc).style('fill', (d, i) => color(i));\n    const legend = svg.selectAll('.legend').data(labels).enter().append('g').attr('class', 'legend').attr('transform', (d, i) => `translate(${radius + 20}, ${i * 20})`);\n    legend.append('rect').attr('width', 10).attr('height', 10).style('fill', (d, i) => color(i));\n    legend.append('text').attr('x', 15).attr('y', 10).text(d => d);\n  }, [serverData]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 10\n  }, this);\n};\n_s(Doghnut, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = Doghnut;\nexport default Doghnut;\nvar _c;\n$RefreshReg$(_c, \"Doghnut\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","Doghnut","serverData","_s","ref","uniqueSectors","forEach","i","includes","sector","push","uniqueTopics","topic","uniqueRegion","region","uniqueCountry","country","uniqueSource","source","uniquePestle","pestle","data","length","labels","width","height","margin","radius","Math","min","color","scaleOrdinal","schemeCategory10","arc","outerRadius","innerRadius","pie","sort","value","d","svg","select","current","attr","append","arcs","selectAll","enter","style","legend","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/visha/OneDrive/Desktop/Data Visualization/dashboard/src/Graphs/Doghnut.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst Doghnut = ({ serverData }) => {\r\n  const ref = useRef();\r\n\r\n  \r\n  useEffect(() => {\r\n    let uniqueSectors = [];\r\n   serverData.forEach((i) => {\r\n      if (!uniqueSectors.includes(i.sector) && i.sector !== '') {\r\n        uniqueSectors.push(i.sector);\r\n      }\r\n    });\r\n    let uniqueTopics = [];\r\n   serverData.forEach((i) => {\r\n      if (!uniqueTopics.includes(i.topic) && i.topic !== '') {\r\n        uniqueTopics.push(i.topic);\r\n      }\r\n    });\r\n    let uniqueRegion = [];\r\n   serverData.forEach((i) => {\r\n      if (!uniqueRegion.includes(i.region) && i.region !== '') {\r\n        uniqueRegion.push(i.region);\r\n      }\r\n    });\r\n    let uniqueCountry = [];\r\n   serverData.forEach((i) => {\r\n      if (!uniqueCountry.includes(i.country) && i.country !== '') {\r\n        uniqueCountry.push(i.country);\r\n      }\r\n    });\r\n    let uniqueSource = [];\r\n   serverData.forEach((i) => {\r\n      if (!uniqueSource.includes(i.source) && i.source !== '') {\r\n        uniqueSource.push(i.source);\r\n      }\r\n    });\r\n    let uniquePestle = [];\r\n   serverData.forEach((i) => {\r\n      if (!uniquePestle.includes(i.pestle) && i.pestle !== '') {\r\n        uniquePestle.push(i.pestle);\r\n      }\r\n    });\r\n\r\n    const data = [\r\n      uniqueCountry.length,\r\n      uniqueRegion.length,\r\n      uniqueSource.length,\r\n      uniqueTopics.length,\r\n      uniqueSectors.length,\r\n      uniquePestle.length,\r\n    ];\r\n    const labels = ['Country', 'Region', 'Source', 'Topic', 'Sector', 'Pestle'];\r\n    const width = 600;\r\n    const height = 400;\r\n    const margin = 10;\r\n    const radius = Math.min(width, height) / 2 - margin;\r\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n    const arc = d3\r\n      .arc()\r\n      .outerRadius(radius - 10)\r\n      .innerRadius(radius - 70);\r\n    const pie = d3.pie().sort(null).value((d) => d);\r\n\r\n    const svg = d3\r\n      .select(ref.current)\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', `translate(${width / 2}, ${height / 2})`);\r\n\r\n    const arcs = svg\r\n      .selectAll('.arc')\r\n      .data(pie(data))\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', 'arc');\r\n\r\n    arcs\r\n      .append('path')\r\n      .attr('d', arc)\r\n      .style('fill', (d, i) => color(i));\r\n\r\n   \r\n    const legend = svg\r\n      .selectAll('.legend')\r\n      .data(labels)\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', 'legend')\r\n      .attr('transform', (d, i) => `translate(${radius + 20}, ${i * 20})`);\r\n\r\n    legend\r\n      .append('rect')\r\n      .attr('width', 10)\r\n      .attr('height', 10)\r\n      .style('fill', (d, i) => color(i));\r\n\r\n    \r\n    legend\r\n      .append('text')\r\n      .attr('x', 15)\r\n      .attr('y', 10)\r\n      .text((d) => d);\r\n  }, [serverData]);\r\n\r\n  return <svg ref={ref}></svg>;\r\n};\r\n\r\nexport default Doghnut;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}