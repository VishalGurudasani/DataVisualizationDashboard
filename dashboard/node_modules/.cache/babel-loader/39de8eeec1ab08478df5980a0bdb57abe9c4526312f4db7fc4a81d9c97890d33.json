{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\OneDrive\\\\Desktop\\\\Data Visualization\\\\dashboard\\\\src\\\\Accordian\\\\Filter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter = ({\n  onDataFiltered\n}) => {\n  _s();\n  const [selectedYear, setSelectedYear] = useState('');\n  const [data, setData] = useState([]);\n  const handleFilter = async () => {\n    fetch(`http://localhost:5000/api/data/year/${selectedYear}`).then(response => response.json()).then(data => setData(data)).catch(error => console.error(\"Error fetching data:\", error));\n    console.log(data);\n  };\n\n  // Generate years from 2000 to 2040\n  const startYear = 2000;\n  const endYear = 2040;\n  const years = Array.from({\n    length: endYear - startYear + 1\n  }, (_, index) => startYear + index);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"year\",\n      children: \"Select Year:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"year\",\n      value: selectedYear,\n      onChange: e => setSelectedYear(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Years\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: year,\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFilter,\n      children: \"Apply Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Filter, \"IeI+sWriuA+JaCqTt5RiSxlFBI0=\");\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Filter","onDataFiltered","_s","selectedYear","setSelectedYear","data","setData","handleFilter","fetch","then","response","json","catch","error","console","log","startYear","endYear","years","Array","from","length","_","index","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","map","year","onClick","_c","$RefreshReg$"],"sources":["C:/Users/visha/OneDrive/Desktop/Data Visualization/dashboard/src/Accordian/Filter.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Filter = ({ onDataFiltered }) => {\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [data,setData] = useState([]);\r\n  const handleFilter = async () => {\r\n    \r\n        fetch(`http://localhost:5000/api/data/year/${selectedYear}`)\r\n        .then((response) => response.json())\r\n        .then((data) => setData(data))\r\n        .catch((error) => console.error(\"Error fetching data:\", error))\r\n        console.log(data)\r\n  };\r\n\r\n  // Generate years from 2000 to 2040\r\n  const startYear = 2000;\r\n  const endYear = 2040;\r\n  const years = Array.from({ length: endYear - startYear + 1 }, (_, index) => startYear + index);\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"year\">Select Year:</label>\r\n      <select id=\"year\" value={selectedYear} onChange={(e) => setSelectedYear(e.target.value)}>\r\n        <option value=\"\">All Years</option>\r\n        {years.map(year => (\r\n          <option key={year} value={year}>{year}</option>\r\n        ))}\r\n      </select>\r\n      <button onClick={handleFilter}>Apply Filter</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,IAAI,EAACC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAE3BC,KAAK,CAAE,uCAAsCL,YAAa,EAAC,CAAC,CAC3DM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEJ,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC,CAC7BO,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;IAC/DC,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;EACvB,CAAC;;EAED;EACA,MAAMW,SAAS,GAAG,IAAI;EACtB,MAAMC,OAAO,GAAG,IAAI;EACpB,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEJ,OAAO,GAAGD,SAAS,GAAG;EAAE,CAAC,EAAE,CAACM,CAAC,EAAEC,KAAK,KAAKP,SAAS,GAAGO,KAAK,CAAC;EAI9F,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAO0B,OAAO,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1C9B,OAAA;MAAQ+B,EAAE,EAAC,MAAM;MAACC,KAAK,EAAE5B,YAAa;MAAC6B,QAAQ,EAAGC,CAAC,IAAK7B,eAAe,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAP,QAAA,gBACtFzB,OAAA;QAAQgC,KAAK,EAAC,EAAE;QAAAP,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAClCX,KAAK,CAACiB,GAAG,CAACC,IAAI,iBACbrC,OAAA;QAAmBgC,KAAK,EAAEK,IAAK;QAAAZ,QAAA,EAAEY;MAAI,GAAxBA,IAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACT9B,OAAA;MAAQsC,OAAO,EAAE9B,YAAa;MAAAiB,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA/BIF,MAAM;AAAAsC,EAAA,GAANtC,MAAM;AAiCZ,eAAeA,MAAM;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}